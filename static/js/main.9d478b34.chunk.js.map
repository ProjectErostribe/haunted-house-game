{"version":3,"sources":["components/RoomData.js","img/rooms/living-room.jpg","img/rooms/kitchen-option.jpg","img/rooms/Room_Library.jpg","img/events/ghost-bride.png","img/events/werewolf.jpg","img/events/zombie-option-1.jpg","components/EventsData.js","img/events/puppet-clown.jpg","img/events/Chainsaw_Madman.jpg","img/events/skittles.jpg","img/events/talking-heads.jpg","img/events/glowing-orbs.jpg","img/events/alien.jpg","components/Header.js","img/rooms/house.jpeg","components/PageNumber.js","components/StartGame.js","img/rooms/Hall-option-1.jpg","sounds/ambience-haunted-cave.mp3","sounds/door-creak.mp3","sounds/werewolf-howl.mp3","sounds/game-over-fail.mp3","sounds/game-over-win.mp3","sounds/evil-laugh.mp3","sounds/game-over-win-2.mp3","sounds/chainsaw-rev.flac","sounds/ghost-scream.mp3","sounds/zombie-moan.wav","components/ShowKey.js","components/PresentKey.js","components/Hallway.js","img/events/game-over.png","components/GameOver.js","img/events/silver-key.jpg","img/events/gold-key.jpeg","components/KeyDisplay.js","util/Random.js","components/ResultAction.js","components/EventModal.js","components/Event.js","components/Room.js","components/AudioMute.js","components/Inventory.js","components/FalseEnding.js","img/events/win.jpeg","components/GameWon.js","components/HallwayReroute.js","App.js","reportWebVitals.js","index.js"],"names":["RoomData","name","description","image","eventData","ghost","actions","type","action","response","werewolf","zombie","Header","className","PageNumber","page","pages","title","length","StartGame","setHasSilverKey","setHasGoldKey","useParams","parseInt","useEffect","id","src","house","alt","to","ShowKey","props","history","useHistory","winMessage","hasGoldKey","hasSilverKey","push","PresentKey","useState","presentedKey","setPresentedKey","onClick","audioOn","Hallway","useSound","doorCreak","soundEnabled","volume","interrupt","playDoorCreak","doorCreakSoundData","stop","img","rooms","map","room","index","pathname","GameOver","gameOverFail","playGameOverFail","gameOverFailSoundData","isGameOver","setTimeout","i","selectedAction","gameOver","message","KeyDisplay","informedOfSilverKey","silverKey","informedOfGoldKey","goldKey","Random","max","Math","floor","random","events","Array","isArray","TypeError","getRandomNumber","list","amount","maxStartIndex","randomStartIndex","endIndex","randomList","slice","randomIndex","tmp","eventNames","selectRandomElements","filter","event","ResultAction","setDeathNote","setIsGameOver","setInformedOfSilverKey","setInformedOfGoldKey","selectEvent","setShowDialog","EventModal","noiseStarter","Ghost","sound","ghostScream","Werewolf","Zombie","zombieMoan","chainsaw","evilLaugh","soundName","hasChosenAction","playSound","soundData","style","margin","closeEvent","currentAction","setAction","setSelectedAction","setHasChosenAction","Event","showDialog","deathNote","Room","beginEvent","setBeginEvent","found","toLowerCase","onEventPass","randomEvent","AudioMute","setAudio","Inventory","FalseEnding","falseEndingText","GoldKey","GameWon","gameOverWin","gameOverWinTwo","playGameOverWin","gameOverWinSoundData","gameWonText","HallwayReroute","hallwayText","App","EventsData","ambienceHauntedCave","playAmbience","ambienceSoundData","selectRandomEvents","randomEvents","setRandomEvents","randomEventsIndex","setRandomEventsIndex","console","log","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d478b34.chunk.js","sourcesContent":["import livingRoom from \"../img/rooms/living-room.jpg\";\nimport kitchen from \"../img/rooms/kitchen-option.jpg\";\nimport library from \"../img/rooms/Room_Library.jpg\";\nconst RoomData = [\n  {\n    name: \"Living Room\",\n    description:\n      \"Upon entering the living room, you notice all the dust encrusted into the ripped, old furniture. The floorboards creak with every step.  A stench of decay fills the room.\",\n    image: livingRoom,\n  },\n  {\n    name: \"Kitchen\",\n    description:\n      \"You have entered the kitchen. A pile of moldy dishes fill the sink. A carving knife, covered in fresh blood and gore, sits on the counter next to a pile of severed organs.\",\n    image: kitchen,\n  },\n  {\n    name: \"Library\",\n    description:\n      \"Upon entering the library, you notice that books are in unkempt piles all over the room. Floating dust intermingles with the smell of old books. The skeleton of a long-dead, avid reader sits in the corner, still rocking slowly, clutching it’s favorite book in it’s dead hands. Its mouth is slightly agape with an eerie smile.\",\n    image: library,\n  },\n];\nexport default RoomData;\n","export default __webpack_public_path__ + \"static/media/living-room.4981036b.jpg\";","export default __webpack_public_path__ + \"static/media/kitchen-option.f9588628.jpg\";","export default __webpack_public_path__ + \"static/media/Room_Library.fd7b4408.jpg\";","export default __webpack_public_path__ + \"static/media/ghost-bride.17d6f73a.png\";","export default __webpack_public_path__ + \"static/media/werewolf.ac4e461a.jpg\";","export default __webpack_public_path__ + \"static/media/zombie-option-1.759bb4ed.jpg\";","//Images\nimport ghost from \"../img/events/ghost-bride.png\";\nimport werewolf from \"../img/events/werewolf.jpg\";\nimport zombie from \"../img/events/zombie-option-1.jpg\";\nimport clownPuppet from \"../img/events/puppet-clown.jpg\";\nimport chainsawMurderer from \"../img/events/Chainsaw_Madman.jpg\";\nimport skittles from \"../img/events/skittles.jpg\";\nimport talkingHeads from \"../img/events/talking-heads.jpg\";\nimport crystalOrbs from \"../img/events/glowing-orbs.jpg\";\nimport alien from \"../img/events/alien.jpg\";\n\nconst eventData = [\n    {\n        name: \"Ghost\",\n        description: \"A ghost bride aimlessly floats into the room.  As you step into the room, she takes notice of you.  Her face contorts in rage that you’ve disturbed her mourning her lost love.\",\n        image: ghost,\n        actions: \n        [\n            { \n            type: \"pass\",\n            action: \"Offer your sincerest apologies.\", \n            response: \"She accepts your apology and you can continue your search for the silver key.\",\n            },\n            { \n            type: \"fail\",\n            action: \"Tell her a joke to lighten the mood in the room.\", \n            response: \"She’s not amused and locks you in the room so you can mourn with her forever.\",\n            },\n            { \n            type: \"redo\",\n            action: \"Give her a blank stare.\", \n            response: \"You end up in a staring contest. Choose again.\"\n            }\n        ]\n    },\n    //alternate response\n    {\n      name: \"Ghost\",\n      description: \"A ghost bride aimlessly floats into the room.  As you step into the room, she takes notice of you.  Her face contorts in rage that you’ve disturbed her mourning her lost love.\",\n      image: ghost,\n      actions: \n      [\n          { \n          type: \"pass\",\n          action: \"Offer your sincerest apologies.\", \n          response: \"She accepts your apology and you can continue your search for the silver key.\",\n          },\n          { \n          type: \"pass\",\n          action: \"Tell her a joke to lighten the mood in the room.\", \n          response: \"The ghost laughs at the joke and lets you go\", //myles please add\n          },\n          { \n          type: \"redo\",\n          action: \"Give her a blank stare.\", \n          response: \"You end up in a staring contest. Choose again.\"\n          }\n      ]\n  },\n    {\n      name: \"Werewolf\",\n      description:\n        \"A snarling and ravenous werewolf attacks you from behind. You barely evade it. Just out your reach, you spot a gun, a haymaker, and a candlestick. You only have time to get to one.\",\n      image: werewolf,\n      actions: [\n        {\n          type: \"pass\",\n          action: \"Candlestick\",\n          response:\n            \"You barely connect with the candlestick, but luckily it is made out of silver.  The werewolf is severely wounded and loses consciousness.  You escape unscathed and can continue your search for the key.\",\n        },\n        {\n          type: \"fail\",\n          action: \"Gun\",\n          response:\n            \"Unfortunately, the gun did not contain a silver bullet.  The wound further enrages the werewolf and it bites you before you can escape.  You turn into a werewolf and run off into the night, howling at the moon, doomed to the cycle of transformation for all time.\",\n        },\n        {\n          type: \"redo\",\n          action: \"Haymaker\",\n          response:\n            \"Your old boxing lessons paid off and the werewolf is temporarily stunned.  Choose one of the other two options while he’s discombobulated.\",\n        },\n        ],\n      },\n  //Alternate Response werewolf\n  {\n    name: \"Werewolf\",\n    description:\n      \"A snarling and ravenous werewolf attacks you from behind. You barely evade it. Just out your reach, you spot a gun, a haymaker, and a candlestick. You only have time to get to one.\",\n    image: werewolf,\n    actions: [\n      {\n        type: \"pass\",\n        action: \"Candlestick\",\n        response:\n          \"You barely connect with the candlestick, but luckily it is made out of silver.  The werewolf is severely wounded and loses consciousness.  You escape unscathed and can continue your search for the key.\",\n      },\n      {\n        type: \"pass\",\n        action: \"Gun\",\n        response:\n          \"The gun contains a silver bullet. You kill the werewolf and run out of the room\", //myles please add\n      },\n      {\n        type: \"redo\",\n        action: \"Haymaker\",\n        response:\n          \"Your old boxing lessons paid off and the werewolf is temporarily stunned.  Choose one of the other two options while he’s discombobulated.\",\n      },\n      ],\n    },\n  {\n    name: \"Zombie\",\n    description:\n      \"A foul, grimy, diseased zombie in blood-stained, tattered clothing approaches you.\",\n    image: zombie,\n    actions: [\n      {\n        type: \"pass\",\n        action: \"Dodge\",\n        response:\n          \"You dodge the zombie, and in the chaos, it stumbles and smashes it’s head open. You escape the zombie and continue to search for the silver key.\",\n      },\n      {\n        type: \"fail\",\n        action: \"Attack\",\n        response:\n          \"You try to attack the zombie, but you underestimate its strength.  It overpowers you and bites you.\",\n      },\n      {\n        type: \"redo\",\n        action: \"Push\",\n        response:\n          \"Pushing the zombie causes it to stumble, but regains its footing, and positions itself to attack. Choose another way to try to overcome the zombie.\",\n      },\n    ],\n  },\n  // zombie alternate response\n  {\n    name: \"Zombie\",\n    description:\n      \"A foul, grimy, diseased zombie in blood-stained, tattered clothing approaches you.\",\n    image: zombie,\n    actions: [\n      {\n        type: \"fail\",\n        action: \"Dodge\",\n        response:\n          \"You stumble trying to dodge the zombie and you crack your head open and game over\", //myles please add\n      },\n      {\n        type: \"pass\",\n        action: \"Attack\",\n        response:\n          \"You overpower the zombie in a test of strength and win the battle \", //myles please add\n      },\n      {\n        type: \"redo\",\n        action: \"Push\",\n        response:\n          \"Pushing the zombie causes it to stumble, but regains its footing, and positions itself to attack. Choose another way to try to overcome the zombie.\",\n      },\n    ],\n  },\n  {\n    name: \"Clown Puppet\",\n    description:\n      \"A puppet sits on the shelf has its head backwards. As you enter the room, the head slowly begins to spin around.\",\n    image: clownPuppet,\n    actions: [\n      {\n        type: \"pass\",\n        action: \"Attack the Puppet\",\n        response:\n          \"You throw the clown puppet on the ground and smash it!  You can now leave the room to continue your search for the silver key.\",\n      },\n      {\n        type: \"fail\",\n        action: \"Wait and see what happens.\",\n        response:\n          \"As the clown head turns to face you, its mouth opens and out comes a spout adorned with a fake flower. The clown squirts you with a liquid. You believe to be water, but as the liquid touches your skin it begins to burn. You realize its acid and it starts to disintegrate your body.\",\n      },\n      {\n        type: \"redo\",\n        action: \"Take a closer look.\",\n        response:\n          \"As the clown head finishes turning, you look down at its hand and you notice a small object.  You lunge to attack the clown puppet, and as you do it drops the object and smoke fills the room, allowing you to choose another way to overcome the clown puppet.\",\n      },\n    ],\n  },\n  {\n    name: \"Chainsaw Murderer\",\n    description:\n      \"A reving of a motor fires up behind you.  As you turn, you see a madman with a chainsaw revving in his hands. The madman lifts the chainsaw over you, you decide to...\",\n    image: chainsawMurderer,\n    actions: [\n      {\n        type: \"pass\",\n        action: \"Duck!\",\n        response:\n          \"The madman misses! He loses his grip on the chainsaw in one hand, and as he continues to swing downward, the chainsaw accidentally connects and saws his own legs off.  You escape and continue to search for the silver key.\",\n      },\n      {\n        type: \"fail\",\n        action: \"Try to get the chainsaw from him.\",\n        response:\n          \"The madman overpowers you.  As you look up, the last thing you see is the saw connecting with your lower half.  You pass out from the pain.\",\n      },\n      {\n        type: \"redo\",\n        action: \"Kick him!\",\n        response:\n          \"The kick connects with the madman’s chest.  He is stunned, but he quickly recovers, giving you enough time to try again.\",\n      },\n    ],\n  },\n  {\n    name: \"Bowl of Skittles\",\n    description:\n      \"You spot a  glowing candy dish full of Skittles sitting on a pedestal in the middle of the room with a sign that says “Eat me if you dare…”.\",\n    image: skittles,\n    actions: [\n      {\n        type: \"pass\",\n        action: \"Eat a handful of Skittles.\",\n        response:\n          \"Yess! These are delicious! You're able to walk away and keep looking for the silver key.\",\n      },\n      {\n        type: \"fail\",\n        action: \"Eat 13 skittles.\",\n        response:\n          \"Oh no! You’re allergic to Skittles and you get food poisoning.\",\n      },\n      {\n        type: \"redo\",\n        action: \"Eat the skittles, but only the red ones.\",\n        response:\n          \"Oh no!  You need to eat one at least one of every color! Choose again. \",\n      },\n    ],\n  },\n  {\n    name: \"The Talking Heads\",\n    description:\n      \"Answer this riddle: “The person who built it sold it.  The person who bought it never used it.  The person who used it never saw it...what is it?”\",\n    image: talkingHeads,\n    actions: [\n      {\n        type: \"pass\",\n        action: \"A coffin\",\n        response:\n          \"“You are wise enough to escape.  Wisdom is the key to survival”  An illuminated silver key appears before the team and the door they entered through opens.\",\n      },\n      {\n        type: \"redo\",\n        action: \"A meal\",\n        response: \"“You have failed and will meet your doom!” .\",\n      },\n      {\n        type: \"redo\",\n        action: \"A table\",\n        response: \"“You have failed and will meet your doom!”\",\n      },\n    ],\n  },\n  {\n    name: \"Crystal Orbs\",\n    description:\n      \"Hundreds of glowing crystal orbs fill the room.  You pluck one off the shelf and ask it where you can find the key.\",\n    image: crystalOrbs,\n    actions: [\n      {\n        type: \"pass\",\n        action: \"“Talk to the heads” \",\n        response: \"“Yes, talk to the heads to help you find the key.”\",\n      },\n      {\n        type: \"redo\",\n        action: \"“Are you hungry?”\",\n        response: \"“I was mistaken, try again” .\",\n      },\n      {\n        type: \"redo\",\n        action: \"“Ask the puppet”\",\n        response: \"“I was mistaken, try again.”\",\n      },\n    ],\n  },\n  {\n    name: \"Alien\",\n    description:\n      \"A figure scurries across the floor and up to the team. “Here’s the key now you’re free!”  The figure holds out a gold key to the group.\",\n    image: alien,\n    actions: [\n      {\n        type: \"pass\",\n        action: \"“Turn the key down and keep looking.\",\n        response: \"“I was mistaken, try again.”\",\n      },\n      {\n        type: \"redo\",\n        action: \"Believe the weird little alien, take the key.\",\n        response:\n          \"The alien hands you a gold key.\",\n      },\n    ],\n  },\n];\n\nexport default eventData;\n","export default __webpack_public_path__ + \"static/media/puppet-clown.c05a10ff.jpg\";","export default __webpack_public_path__ + \"static/media/Chainsaw_Madman.5bcc66a1.jpg\";","export default __webpack_public_path__ + \"static/media/skittles.d5823830.jpg\";","export default __webpack_public_path__ + \"static/media/talking-heads.c39b39ba.jpg\";","export default __webpack_public_path__ + \"static/media/glowing-orbs.54590802.jpg\";","export default __webpack_public_path__ + \"static/media/alien.80f44eb1.jpg\";","import React from \"react\";\n\nexport default function Header() {\n  return (\n    <div className=\"header-div\">\n        <h1 className=\"main-style-header\">THE HAUNTED HOUSE GAME</h1>\n        <h3>By the Bitwise Industries React Apprentice Team.</h3>\n        <h2>&#128123; &#x1F47B;  &#128123; &#x1F47B; </h2>\n    </div>  \n  )\n};\n","export default __webpack_public_path__ + \"static/media/house.6d25557d.jpeg\";","import React from 'react';\n\nconst PageNumber = ({page, pages, title}) => {\n    \n    return (\n        <div>\n            <div>{title} {page + 1} / {pages.length}</div>\n        </div>\n    )\n}\n\nexport default PageNumber","import React from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport Header from \"./Header\";\nimport house from \"../img/rooms/house.jpeg\";\nimport PageNumber from \"./PageNumber\";\n\nexport default function StartGame({ setHasSilverKey, setHasGoldKey }) {\n\tlet { page } = useParams();\n\tpage = parseInt(page || 0);\n\n  useEffect(() => {\n    setHasSilverKey(false);\n    setHasGoldKey(false);\n  });\n  \n\tconst pages = [\n\t\t<div>\n\t\t\t<p>\n\t\t\t\tThe Bitwise React Apprentices were out trick or treating on a dark and\n\t\t\t\twindy Halloween eve, when they stumbled across a creepy, rundown home at\n\t\t\t\tthe end of a half-built construction site. Juan, the leader of the\n\t\t\t\tgroup, walked up to the door, rang the doorbell and no one answered.\n\t\t\t</p>\n\t\t</div>,\n\t\t<div>\n\t\t\t<p>He jiggled the door and it swung open.</p>\n\t\t\t<p>\n\t\t\t\t“Is there anyone home?” asks Myles. “Do you think they have Skittles?”\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t“Does it look like they have Skittles? They barely have time to clean\n\t\t\t\tfrom the looks of it!” Grace says, eyeing the cobwebs in the corner of\n\t\t\t\tthe doorway.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t“Ooohh… I think I see some Skittles in the hallway!” Darla exclaims,\n\t\t\t\tpointing deeper into the darkened space just beyond the door.\n\t\t\t</p>\n\t\t</div>,\n\t];\n\n\treturn (\n\t\t<div id=\"start-game\">\n\t\t\t{page === 0 && <Header />}\n\t\t\t<img src={house} alt=\"\" />\n\n\t\t\t{page === 0 && <div>{pages[0]}</div>}\n\t\t\t{page === 1 && <div>{pages[1]}</div>}\n\n      <div id=\"btn-bar\">\n        <div className=\"btn-wrap\">\n          <Link to={`/hallwayreroute`}>\n            <button> Skip to Gameplay </button>\n          </Link>\n        </div>\n        <div className=\"btn-wrap\">\n          {page === 1 ? (\n            <Link to={`/hallway/0`}>\n              <button>Continue Story</button>\n            </Link>\n          ) : (\n            <Link to={`/startgame/${page + 1}`}>\n              <button>Continue Story</button>\n            </Link>\n          )}\n        </div>\n      </div>\n\t\t\t<PageNumber pages={pages} page={page} title=\"Start Game\" />\n\t\t</div>\n\t);\n}\n","export default __webpack_public_path__ + \"static/media/Hall-option-1.b1154b66.jpg\";","export default __webpack_public_path__ + \"static/media/ambience-haunted-cave.cc84bd21.mp3\";","export default __webpack_public_path__ + \"static/media/door-creak.30200790.mp3\";","export default __webpack_public_path__ + \"static/media/werewolf-howl.f0c885fd.mp3\";","export default __webpack_public_path__ + \"static/media/game-over-fail.d8bc585b.mp3\";","export default __webpack_public_path__ + \"static/media/game-over-win.43f72268.mp3\";","export default __webpack_public_path__ + \"static/media/evil-laugh.8c8c0235.mp3\";","export default __webpack_public_path__ + \"static/media/game-over-win-2.e106e9fb.mp3\";","export default __webpack_public_path__ + \"static/media/chainsaw-rev.512cb5f2.flac\";","export default __webpack_public_path__ + \"static/media/ghost-scream.e041da89.mp3\";","export default __webpack_public_path__ + \"static/media/zombie-moan.382c1f26.wav\";","import { useHistory } from \"react-router-dom\";\n\n// triggers when hasGoldKey or hasSilverKey are true\n  export default function ShowKey (props) {\n    const history = useHistory();\n    var winMessage = '';\n    // fake key and keep playing\n    if (props.hasGoldKey) {\n      \n    }\n    // real key and win\n    else if (props.hasSilverKey) {\n      winMessage= history.push(\"/gamewon\")\n\n    }\n    else {\n      winMessage='';\n    }\n    return (\n      <div>\n        {winMessage}\n        {props.hasGoldKey && \n          history.push(\"/falseending\")\n        }\n      </div>\n    );\n  };","import { useState } from \"react\";\nimport ShowKey from \"./ShowKey\";\n\n\nfunction PresentKey(props) {\n  const [presentedKey, setPresentedKey] = useState(null);\n\n  return (\n    <div>\n      <div className=\"btn-wrap\">\n        <button\n          className=\"presentKey\"\n          onClick={() => {\n            setPresentedKey(true);\n          }}\n        >\n          Present Key\n        </button>\n      </div>\n      {/* { \n      presentedKey !== null\n      && !(props.hasGoldKey || props.hasSilverKey)\n      && <p>You need to find a key first!</p>\n      } */}\n      {\n      presentedKey\n        && (props.hasGoldKey || props.hasSilverKey)\n        && (\n          <ShowKey\n            hasGoldKey={props.hasGoldKey}\n            hasSilverKey={props.hasSilverKey}\n            setHasGoldKey={props.setHasGoldKey}\n            audioOn={props.audioOn}\n          />\n      )}\n    </div>\n  );\n}\n\nexport default PresentKey;\n","import React from \"react\";\nimport img from \"../img/rooms/Hall-option-1.jpg\";\nimport { useParams, Link } from \"react-router-dom\";\nimport useSound from \"use-sound\";\nimport { doorCreak } from \"../sounds\";\nimport PresentKey from \"./PresentKey\";\nimport PageNumber from \"./PageNumber\";\n\nconst Hallway = (props) => {\n\tconst [playDoorCreak, doorCreakSoundData] = useSound(doorCreak, {\n\t\tsoundEnabled: props.audioOn,\n\t\tvolume: 0.8,\n\t\tinterrupt: true,\n\t});\n\tlet { page } = useParams();\n\tpage = parseInt(page || 0);\n\n\tconst pages = [\n\t\t<div>\n\t\t\t<p>\n\t\t\t\tThe team of apprentices hesitantly step into the hallway, looking around\n\t\t\t\tinto the begrimed space. The door slams shut behind them, shaking the\n\t\t\t\tdust from the ceiling above!\n\t\t\t</p>\n\t\t</div>,\n\t\t<div>\n\t\t\t<p>\n\t\t\t\tA booming voice from the rafters cackles“You’ve found my Haunted House!\n\t\t\t\tCome in, grab a chair, take a nap if you'd like, but in order to leave\n\t\t\t\tyou must find the silver key!”\n\t\t\t</p>\n\t\t</div>,\n\t\t<div>\n\t\t\t<p>“What was that?!” Habteab exclaimed.</p>\n\t\t\t<p>“Who said what about a key?” Garet says.</p>\n\t\t\t<p>\n\t\t\t\t“We still haven’t found out if they have Skittles…” Myles sighs, rolling\n\t\t\t\ttheir eyes.\n\t\t\t</p>\n\t\t</div>,\n\t\t<div>\n\t\t\t<p>\n\t\t\t\tThe voice continues, “In front of you is a hallway filled with doors.\n\t\t\t\tEach room has a challenge for you all to beat. One room holds the key.\n\t\t\t\tComplete the challenge, find the key, and save yourselves before it’s\n\t\t\t\ttoo late. You’ve been volun-told to search the rooms for the key.\n\t\t\t\tEveryone else stays put.”\n\t\t\t</p>\n\t\t</div>,\n\t\t<div>\n\t\t\t<p>\n\t\t\t\tAs you step forward, a large metal cage slams down around Juan and the\n\t\t\t\trest of the group. A look of fear passes among the group.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t“Remember” the voice pronounces “Nobody belongs here more than you!”\n\t\t\t</p>\n\t\t</div>,\n\t];\n\n\t// stop doorCreak sound when speaker button is toggled off\n\tif (!props.audioOn) {\n\t\tdoorCreakSoundData.stop();\n\t}\n\n\treturn (\n\t\t<div id=\"hallway\">\n\t\t\t<h1>Hallway</h1>\n\t\t\t<div className=\"img-wrap\">\n\t\t\t\t<img className=\"hallway\" src={img} alt=\"\" />\n\t\t\t</div>\n\t\t\t{page === 0 && <div>{pages[0]}</div>}\n\t\t\t{page === 1 && <div>{pages[1]}</div>}\n\t\t\t{page === 2 && <div>{pages[2]}</div>}\n\t\t\t{page === 3 && <div>{pages[3]}</div>}\n\t\t\t{page === 4 && <div>{pages[4]}</div>}\n\t\t\t\n\t\t\t<div id=\"button-bar\">\n        {page !== 4 && (\n          <div className=\"btn-wrap\">\n            <Link to={`/hallwayreroute`}>\n              <button> Skip to Gameplay </button>\n            </Link>\n          </div>\n        )}\n\t\t\t\t{page !== 4 ? (\n\t\t\t\t\t<Link to={`/hallway/${page + 1}`}>\n\t\t\t\t\t\t<button id=\"btn\">Continue Story</button>\n\t\t\t\t\t</Link>\n\t\t\t\t) : (\n\t\t\t\t\tprops.rooms.map((room, index) => (\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\t\tpathname: `/room/${room.name}`,\t\t\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<button id=\"btn\" onClick={() => playDoorCreak()}>\n\t\t\t\t\t\t\t\t{room.name}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t))\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{page === 4 && (\n\t\t\t\t<PresentKey\n\t\t\t\t\thasGoldKey={props.hasGoldKey}\n\t\t\t\t\thasSilverKey={props.hasSilverKey}\n\t\t\t\t\tsetHasGoldKey={props.setHasGoldKey}\n\t\t\t\t\tsetHasSilverKey={props.setHasSilverKey}\n\t\t\t\t\taudioOn={props.audioOn}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<PageNumber pages={pages} page={page} title=\"Hallway\" />\n\t\t</div>\n\t);\n};\n\nexport default Hallway;\n","export default __webpack_public_path__ + \"static/media/game-over.0780246a.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport gameOver from \"../img/events/game-over.png\"\nimport useSound from 'use-sound';\nimport { gameOverFail } from '../sounds';\n\nfunction GameOver(props) {\n  const [playGameOverFail, gameOverFailSoundData] = useSound(gameOverFail, {\n    soundEnabled: props.audioOn,\n    volume: 0.25,\n    interrupt: true\n  });\n\n  if (!props.audioOn) {\n    gameOverFailSoundData.stop();\n  } else if (props.isGameOver) {\n    // setTimeout hack to place playGameOverWin() in back of event queue \n    setTimeout(() => playGameOverFail(), 0);\n  }\n  return (\n    props.isGameOver &&\n    props.i === props.selectedAction && (\n      <div id=\"game-over\" className=\"game-over-modal\">\n        <div className=\"img-wrap\">\n          <img src={gameOver} alt=\"\" />\n        </div>\n        <p> {props.message}</p>\n        <h1>Game Over</h1>\n        <div className=\"btn-wrap\">\n          <Link to=\"/\">\n            <button className=\"backToHomeBtn\">Restart the Game </button>\n          </Link>\n        </div>\n      </div>\n    )\n  );\n}\nexport default GameOver;\n","export default __webpack_public_path__ + \"static/media/silver-key.cc6facd9.jpg\";","export default __webpack_public_path__ + \"static/media/gold-key.f6a76d3d.jpeg\";","import React from \"react\";\n\n//images\nimport silverKey from \"../img/events/silver-key.jpg\";\nimport goldKey from \"../img/events/gold-key.jpeg\";\n\nfunction KeyDisplay(props) {\n  return (\n    //The test cases were changed to 'informedOf' instead of 'has' because now someone could carry both keys simultaneously and we don't want bug where the information displays for both simultaneously\n    <div>\n      {!props.informedOfSilverKey && (\n        <div>\n          <div className=\"img-wrap\">\n            <img src={silverKey} alt=\"silver key\" />\n          </div>\n          <h2>You have obtained the Silver Key!</h2>\n          <p>You must now find your way back to the hallway to present the key.</p>\n        </div>\n      )}\n      {!props.informedOfGoldKey && (\n        <div>\n          <div className=\"img-wrap\">\n            <img src={goldKey} alt=\"gold key\" />\n          </div>\n          <h2>You have obtained the Gold Key!</h2>\n          <p>You must now find your way back to the hallway to present the key.</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default KeyDisplay;\n","\nexport default class Random {\n  /**\n   * Get a random number from 0 to below max\n   * @param {number} max \n   * @returns {number} a random number\n   * call this function with a max number that random numbers should be less than.\n   * ex: Random.getRandomNumber(10) will return a number between 0 to 9, inclusive\n   */\n  static getRandomNumber(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n  /**\n   * Gets a random event from events state\n   * @param {Array} events\n   * @returns {Object} a random event\n   * call selectEvent and pass the events state.\n   * ex: Random.selectEvent([{ name: 'werewolf' }, { name: 'zombie' }]) could return { name: 'zombie' }\n   */\n  static selectEvent(events) {\n    // type checking safety\n    if (!Array.isArray(events)) {\n      throw new TypeError(`selectEvent(): Received type ${events === null ? 'null' : typeof events}, expected an Array`);\n    }\n\n    const randomNumber = Random.getRandomNumber(events.length);\n    return events[randomNumber];\n  }\n\n/**\n * Gets a shuffled subset array from an array\n * @param {Array} list\n * @param {number} amount\n * @return {Array}\n * call this function by passsing an array and the number of random elements you want back.\n * ex: Random.selectRandomElements([ 1,2,3,4 ], 2) could return [ 2,1 ]\n */\n  static selectRandomElements(list, amount = list.length) {\n  // limit amount to list length if user sends amount greater than list.length\n  if (amount > list.length) {\n    amount -= (amount - list.length);\n  }\n  \n  const maxStartIndex = list.length - amount;\n  const randomStartIndex = Random.getRandomNumber(maxStartIndex + 1);\n  const endIndex = randomStartIndex + amount;\n  const randomList = list.slice(randomStartIndex, endIndex);\n\n  // https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array/2450976#2450976\n  for (let i = randomList.length - 1; i >= 0; --i) {\n    const randomIndex = Random.getRandomNumber(i);\n    // [ randomList[i], randomList[randomIndex] ] = [ randomList[randomIndex], randomList[i] ];\n    const tmp = randomList[i];\n    randomList[i] = randomList[randomIndex];\n    randomList[randomIndex] = tmp;\n  }\n  return randomList;\n  }\n\n  /**\n   * Returns a shuffled events array with exclusive (non-repeating) event names.\n   * @param {Array} events\n   * @returns {Object} a random event\n   * call this function by passing the events array.\n   * ex: Random.selectRandomEvents(events) could return [{ name: 'zombie' }, { name: 'ghost' }, ...]\n   */\n  static selectRandomEvents(events) {\n    const eventNames = {};\n    const shuffledEvents = Random.selectRandomElements(events);\n    const exclusiveEvents = shuffledEvents.filter(event => {\n      if (!eventNames[event.name]) {\n        eventNames[event.name] = 1;\n        return true;\n      }\n      return false;\n    });\n\n    return exclusiveEvents;\n  }\n}\n\n\n","import React from \"react\";\nimport KeyDisplay from \"./KeyDisplay\";\nimport Random from \"../util/Random\";\nimport { useEffect } from \"react/cjs/react.development\";\n\nconst ResultAction = (props) => {\n  useEffect(() => {\n    // Added useEffect to fix warning about bad useState call\n\n    if (props.action.type === \"fail\") {\n      props.setDeathNote(props.action.response);\n      props.setIsGameOver(true);\n    }\n\n    if (props.action.action === \"A coffin\") {\n      props.setHasSilverKey(true);\n      props.setInformedOfSilverKey(false);\n    } else if (\n      props.action.action === \"Believe the weird little alien, take the key.\"\n    ) {\n      props.setHasGoldKey(true);\n      props.setInformedOfGoldKey(false);\n    } else if (\n      props.action.type === \"pass\" &&\n      !props.hasSilverKey &&\n      props.event.name !== \"Alien\"\n    ) {\n      let randomEventForSilverKey = Random.selectEvent(props.events);\n      if (randomEventForSilverKey === props.event) {\n        props.setHasSilverKey(true);\n        props.setInformedOfSilverKey(false);\n      }\n    }\n  });\n\n  return props.i === props.selectedAction ? (\n    <>\n      <p>{props.action.response}</p>\n      <KeyDisplay\n        hasGoldKey={props.hasGoldKey}\n        hasSilverKey={props.hasSilverKey}\n        setHasGoldKey={props.setHasGoldKey}\n        setInformedOfGoldKey={props.setInformedOfGoldKey}\n        setInformedOfSilverKey={props.setInformedOfSilverKey}\n        informedOfGoldKey={props.informedOfGoldKey}\n        informedOfSilverKey={props.informedOfSilverKey}\n      />\n      {props.action.type !== \"redo\" && (\n        <button onClick={() => props.setShowDialog(false)}>Continue</button>\n      )}\n    </>\n  ) : null;\n};\n\nexport default ResultAction;\n\n","import React, { useState } from \"react\";\nimport ResultAction from \"./ResultAction\";\nimport KeyDisplay from \"./KeyDisplay\";\nimport useSound from \"use-sound\";\nimport { zombieMoan, ghostScream, chainsaw, evilLaugh, werewolf,  } from \"../sounds\";\n\nfunction EventModal(props) {\n  //States to determine which key they have just received since now it is possible to have both keys simultaneously\n  const [informedOfSilverKey, setInformedOfSilverKey] = useState(true);\n  const [informedOfGoldKey, setInformedOfGoldKey] = useState(true);\n\n  // event sounds\n  const noiseStarter = {\n    Ghost: { sound: ghostScream, volume: 0.01 },\n    Werewolf: { sound: werewolf, volume: 0.10 },\n    Zombie: { sound: zombieMoan, volume: 0.10 },\n    \"Chainsaw Murderer\": { sound: chainsaw, volume: 0.10 },\n    \"The Talking Heads\": { sound: evilLaugh, volume: 0.10 },\n\n  }\n  const soundName = props.event.name;\n  const [playSound, soundData] = useSound(\n    noiseStarter[soundName]?.sound, \n    { soundEnabled: !props.hasChosenAction && props.audioOn,\n    volume: noiseStarter[soundName]?.volume,\n    interrupt: true }\n  );\n  \n  if (props.hasChosenAction || !props.audioOn) {\n    soundData.stop();\n  } else {\n    // setTimeout hack to place playSound() in back of event queue \n    setTimeout(() => playSound(), 0);\n  }\n  // For if they just received either key\n  if (!informedOfSilverKey || !informedOfGoldKey) {\n    return (\n      <div className=\"event-modal\" id=\"event\" >\n        <p>{props.action.response}</p>\n        <KeyDisplay\n          hasGoldKey={props.hasGoldKey}\n          hasSilverKey={props.hasSilverKey}\n          setHasGoldKey={props.setHasGoldKey}\n          informedOfGoldKey={informedOfGoldKey}\n          informedOfSilverKey={informedOfSilverKey}\n        />\n        <button\n          onClick={() => {\n            props.setShowDialog(false);\n            setInformedOfSilverKey(true);\n            setInformedOfGoldKey(true);\n          }}\n        >\n          Continue\n        </button>\n      </div>\n    );\n  }\n  return (\n    //For when the event first renders and they haven't chosen an action yet\n    <>\n      {!props.hasChosenAction && !props.isGameOver ? (\n        <div className=\"event-modal\" id=\"event\" >\n          <div style={{ margin: \"0\" }}>\n            <h3>{props.event.name}</h3>\n            <div className=\"img-wrap\">\n              <img src={props.event.image} alt=\"\" />\n            </div>\n            <p>{props.event.description}</p>\n            {props.event.actions.map((currentAction, i) => (\n              <div key={i}>\n                {!props.isGameOver && (\n                  <button\n                    onClick={() => {\n                      props.setAction(currentAction);\n                      props.setSelectedAction(i);\n                      if (currentAction.type !== \"redo\")\n                        props.setHasChosenAction(true);\n                    }}\n                  >\n                    {currentAction.action}\n                  </button>\n                )}\n                <ResultAction\n                  i={i}\n                  action={props.action}\n                  selectedAction={props.selectedAction}\n                  setHasSilverKey={props.setHasSilverKey}\n                  setHasGoldKey={props.setHasGoldKey}\n                  setIsGameOver={props.setIsGameOver}\n                  hasGoldKey={props.hasGoldKey}\n                  hasSilverKey={props.hasSilverKey}\n                  closeEvent={props.closeEvent}\n                  name={props.event.name}\n                  setShowDialog={props.setShowDialog}\n                  setDeathNote={props.setDeathNote}\n                  setInformedOfGoldKey={setInformedOfGoldKey}\n                  setInformedOfSilverKey={setInformedOfSilverKey}\n                  informedOfGoldKey={informedOfGoldKey}\n                  informedOfSilverKey={informedOfSilverKey}\n                  event={props.event}\n                  events={props.events}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      ) : (\n        //For when they have chosen an action and see response but didn't receive either key\n        !props.isGameOver &&\n        informedOfSilverKey &&\n        informedOfGoldKey && (\n          <div className=\"event-modal\" id=\"event\" >\n            <div style={{ margin: \"0\" }}>\n              <h3>{props.event.name}</h3>\n              <div className=\"img-wrap\">\n                <img src={props.event.image} alt=\"\" />\n              </div>\n              <ResultAction\n                i={props.selectedAction}\n                action={props.action}\n                selectedAction={props.selectedAction}\n                setHasSilverKey={props.setHasSilverKey}\n                setHasGoldKey={props.setHasGoldKey}\n                setIsGameOver={props.setIsGameOver}\n                hasGoldKey={props.hasGoldKey}\n                hasSilverKey={props.hasSilverKey}\n                closeEvent={props.closeEvent}\n                name={props.event.name}\n                setShowDialog={props.setShowDialog}\n                setDeathNote={props.setDeathNote}\n                setInformedOfGoldKey={setInformedOfGoldKey}\n                setInformedOfSilverKey={setInformedOfSilverKey}\n                informedOfGoldKey={informedOfGoldKey}\n                informedOfSilverKey={informedOfSilverKey}\n                event={props.event}\n                events={props.events}\n              />\n            </div>\n          </div>\n        )\n      )}\n    </>\n  );\n}\n\nexport default EventModal;\n","import React, { useState } from \"react\";\nimport GameOver from \"./GameOver\";\nimport EventModal from \"./EventModal\";\n\nconst Event = ({\n  event,\n  isGameOver,\n  setIsGameOver,\n  hasSilverKey,\n  hasGoldKey,\n  setHasGoldKey,\n  setHasSilverKey,\n  setShowDialog,\n  showDialog,\n  events,\n  audioOn,\n}) => {\n  const [action, setAction] = useState({});\n  const [selectedAction, setSelectedAction] = useState(-1);\n  const [hasChosenAction, setHasChosenAction] = useState(false);\n  const [deathNote, setDeathNote] = useState(\"\");\n\n  const closeEvent = () => {\n    setShowDialog(false);\n  };\n\n  return (\n    <>\n      {showDialog && (\n        <EventModal\n          event={event}\n          isGameOver={isGameOver}\n          setAction={setAction}\n          setSelectedAction={setSelectedAction}\n          selectedAction={selectedAction}\n          setHasSilverKey={setHasSilverKey}\n          setHasGoldKey={setHasGoldKey}\n          setIsGameOver={setIsGameOver}\n          hasGoldKey={hasGoldKey}\n          hasSilverKey={hasSilverKey}\n          closeEvent={closeEvent}\n          setDeathNote={setDeathNote}\n          setShowDialog={setShowDialog}\n          action={action}\n          hasChosenAction={hasChosenAction}\n          setHasChosenAction={setHasChosenAction}\n          events={events}\n          audioOn={audioOn}\n        />\n      )}\n      <GameOver isGameOver={isGameOver} message={deathNote} audioOn={audioOn} />\n    </>\n  );\n};\n\nexport default Event;\n","import { useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Event from \"./Event\";\n\nfunction Room(props) {\n  const { name } = useParams();\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [showDialog, setShowDialog] = useState(false);\n  const [beginEvent, setBeginEvent] = useState(true);\n\n  const found = props.rooms.filter(\n    (room) => room.name.toLowerCase() === name.toLowerCase()\n  );\n\n  const searchRoom = () => {\n    setShowDialog(true);\n    setBeginEvent(false);\n  };\n\n  return (\n    <div id=\"room\">\n      <h1>{found[0].name}</h1>\n      <div className=\"img-wrap\">\n        <img src={found[0].image} alt=\"\" />\n      </div>\n\n      <p>{found[0].description}</p>\n      {beginEvent && <button onClick={() => searchRoom()}>Search Room</button>}\n\n      {(!isGameOver || !props.hasSilverKey) && (\n        <div className=\"btn-wrap\">\n          <Link to=\"/hallwayreroute\">\n            <button\n              className=\"backToHomeBtn\"\n              onClick={() => {\n                setBeginEvent(true);\n                props.onEventPass();\n              }}\n            >\n              Back to Hallway\n            </button>\n          </Link>\n        </div>\n      )}\n      <Event\n        event={props.randomEvent}\n        isGameOver={isGameOver}\n        setIsGameOver={setIsGameOver}\n        hasGoldKey={props.hasGoldKey}\n        setHasGoldKey={props.setHasGoldKey}\n        hasSilverKey={props.hasSilverKey}\n        setHasSilverKey={props.setHasSilverKey}\n        setBeginEvent={setBeginEvent}\n        beginEvent={beginEvent}\n        setShowDialog={setShowDialog}\n        showDialog={showDialog}\n        events={props.events}\n        audioOn={props.audioOn}\n      />\n    </div>\n  );\n}\n\nexport default Room;\n","import React from \"react\";\nimport { GiSpeaker, GiSpeakerOff } from 'react-icons/gi';\n\nexport default function AudioMute ({audioOn, setAudio}) {\n    return (\n        <div>\n            <button className=\"btn-audio\" onClick={() => setAudio(!audioOn)}>\n                {\n                    audioOn ?  //if audio on, then return GiSpeaker, else return Speakers \n                    <GiSpeaker /> :\n                    <GiSpeakerOff />\n                }\n                </button>\n        </div>\n    );\n};\n\n","import React from \"react\";\nimport AudioMute from './AudioMute';\n\nfunction Inventory(props) {\n\treturn (\n\t\t<div id=\"inventory\">\n\t\t\t<AudioMute \n\t\t\t\taudioOn={props.audioOn}\n\t\t\t\tsetAudio={props.setAudio}>\n\t\t\t</AudioMute>\n            { props.goldKey && <span id=\"gold-key\">G</span> }\n            { props.silverKey && <span id=\"silver-key\">S</span> }            \n\t\t</div>\n\t);\n}\n\nexport default Inventory;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport GoldKey from \"../img/events/gold-key.jpeg\";\n// import useSound from \"use-sound\";\n// import gameOverLose from \"../sounds/game-over-lose.wav\";\nimport Header from \"./Header\";\n\nconst FalseEnding = ({setHasGoldKey}) => {\n\t// const [play] = useSound(gameOverLose);\n\n  const falseEndingText = <div>\n      <p>Juan takes the key out of his pocket and inserts it into the keyhole, but just as the tip of the key touches the lock, it smashes into the lock, the gold wrapping peels away and reveals semi-melted chocolate.</p>\n      <p>You were tricked by the alien, keep trying to win the Silver Key</p>\n    </div>\n\n\treturn (\n\t\t<div id=\"false-ending\">\n\t\t\t<Header />\n\t\t\t<img id=\"gold-key\" src={GoldKey} alt=\"\" />\n\n      {falseEndingText}\n\t\t\t\n\t\t\t<Link to=\"/hallwayreroute\">\n\t\t\t\t<button className=\"backToHomeBtn\" onClick={() => setHasGoldKey(false)}>Keep Trying</button>\n\t\t\t</Link>\n\t\t</div>\n\t);\n};\n\nexport default FalseEnding;\n","export default __webpack_public_path__ + \"static/media/win.dd2562a8.jpeg\";","import React from \"react\";\nimport { Link }from 'react-router-dom';\nimport useSound from \"use-sound\";\nimport { gameOverWin, gameOverWinTwo } from \"../sounds\";\nimport image from \"../img/events/win.jpeg\";\nimport Header from \"./Header\";\nimport silverKey from \"../img/events/silver-key.jpg\";\nimport Random from \"../util/Random\";\n\nfunction GameWon({ audioOn }) {\n  // useState to prevent infinite loop bug when passing random sounds to useSound\n  const [playGameOverWin, gameOverWinSoundData] = useSound(Random.selectEvent([gameOverWin, gameOverWinTwo]), {\n    soundEnabled: audioOn,\n    volume: 0.15,\n    interrupt: true\n  });\n \n  if (!audioOn) {\n    gameOverWinSoundData.stop();\n  } else {\n    // setTimeout hack to place playGameOverWin() in back of event queue \n    setTimeout(() => playGameOverWin(), 0);\n  }\n\n  const gameWonText = <div>\n    <p>You return to the group with the key. The cage containing Juan and the rest of the team lifts. The team rushes out of the cage, and passes you to the door. As you hold out the key, the group parts and you spot the door. You insert the key into the keyhole and turn. As the door unlocks, you push the heavy door open. Fresh air rushes past you and into the house. You and the team spill out into the street as you spot a figure strolling up the street to the house.</p>\n\n    <p>“Irma?! What are you doing here?!” Eyob questions.</p>\n\n    <p>“Hi everyone. You’re early for the Bitwise Haunted House!” Irma says, a smile plastered on her face as she points to the small “Bitwise Industries” sign just above the doorway.</p>\n  </div>\n\n  return (\n    <div id=\"game-won\">\n      \n      <div className=\"img-wrap\">\n        <img src={silverKey} alt=\"silver key\" />\n      </div>\n\n      <div className=\"img-wrap\">\n        <img src={image} alt=\"\" />\n      </div>\n\n      {gameWonText}\n\n      <div className=\"btn-wrap\">\n        <Link to=\"/\">\n          <button className=\"backToHomeBtn\">Restart the Game</button>\n        </Link>\n      </div>\n      <Header />\n    </div>\n  );\n}\n\nexport default GameWon;\n","import React from \"react\";\nimport img from \"../img/rooms/Hall-option-1.jpg\";\nimport { Link } from \"react-router-dom\";\nimport useSound from \"use-sound\";\nimport { doorCreak } from \"../sounds\";\nimport PresentKey from \"./PresentKey\";\n\nconst HallwayReroute = (props) => {\n\tconst [playDoorCreak, doorCreakSoundData] = useSound(doorCreak, {\n\t\tsoundEnabled: props.audioOn,\n\t\tvolume: 0.8,\n\t\tinterrupt: true,\n\t});\n\n\t// stop doorCreak sound when speaker button is toggled off\n\tif (!props.audioOn) {\n\t\tdoorCreakSoundData.stop();\n\t}\n\n  const hallwayText = <div>\n    <p>In front of you is a hallway filled with doors. Each room has a challenge for you to beat. One room holds the key.</p>\n    <p>Complete the challenge, find the key, and make your way back to the hallway to present the key, save your friends and escape!</p>\n  </div>\n\n\treturn (\n\t\t<div id=\"hallway\">\n\t\t\t<h1>Hallway</h1>\n\t\t\t<div className=\"img-wrap\">\n\t\t\t\t<img className=\"hallway\" src={img} alt=\"\" />\n\t\t\t</div>\n\t\t\t{hallwayText}\n\t\t\t<div id=\"button-bar\">\n\t\t\t\t{(\n\t\t\t\tprops.rooms.map((room, index) => (\n\t\t\t\t\t<Link to={`/room/${room.name}`} key={index}>\n\t\t\t\t\t\t<button id=\"btn\" onClick={() => playDoorCreak()}>\n\t\t\t\t\t\t\t{room.name}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</Link>\n\t\t\t\t\t))\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{<PresentKey\n\t\t\t\t\thasGoldKey={props.hasGoldKey}\n\t\t\t\t\thasSilverKey={props.hasSilverKey}\n\t\t\t\t\tsetHasGoldKey={props.setHasGoldKey}\n\t\t\t\t\tsetHasSilverKey={props.setHasSilverKey}\n\t\t\t\t\taudioOn={props.audioOn}\n\t\t\t\t/>\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport default HallwayReroute;","import React, { useState } from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport RoomData from \"./components/RoomData.js\";\nimport EventsData from \"./components/EventsData\";\nimport StartGame from \"./components/StartGame\";\nimport Hallway from \"./components/Hallway\";\nimport Room from \"./components/Room\";\nimport Inventory from \"./components/Inventory\";\nimport useSound from \"use-sound\";\nimport { ambienceHauntedCave } from \"./sounds\";\nimport Random from './util/Random';\nimport FalseEnding from \"./components/FalseEnding\";\nimport GameWon from \"./components/GameWon\";\nimport HallwayReroute from \"./components/HallwayReroute\";\n\nfunction App() {\n\tconst rooms = RoomData;\n\tconst events = EventsData;\n\tconst [audioOn, setAudio] = useState(true);\n\tconst [hasGoldKey, setHasGoldKey] = useState(false);\n\tconst [hasSilverKey, setHasSilverKey] = useState(false);\n\tconst [playAmbience, ambienceSoundData] = useSound(ambienceHauntedCave, {\n\t\tsoundEnabled: audioOn,\n\t\tvolume: 0.15,\n\t\tinterrupt: true\n\t});\n\tconst [randomEvents, setRandomEvents] = useState(Random.selectRandomEvents(events));\n  const [randomEventsIndex, setRandomEventsIndex] = useState(0);\n\n\t// stop ambience sound when speaker button is toggled off\n\tif (!audioOn) {\n\t\tambienceSoundData.stop();\n\t} else {\n\t\t// setTimeout hack to place playAmbience() in back of event queue \n    setTimeout(() => {\n\t\t\tplayAmbience()\n\t\t\tconsole.log(ambienceSoundData.sound);\n\t\t\t// ambienceSoundData.sound?.loop();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * called when user clicks continue after passing an event\n\t * @listens onClick EventModal\n\t */\n\t const onEventPass = () => {\n\t\tif (randomEventsIndex + 1 >= randomEvents.length) {\n\t\t\tsetRandomEvents(Random.selectRandomEvents(events));\n\t\t\tsetRandomEventsIndex(0);\n\t\t} else {\n\t\t\tsetRandomEventsIndex(randomEventsIndex + 1);\n\t\t}\n\t}\n\n\treturn (\n\t\t<HashRouter>\n\t\t\t<Inventory\n\t\t\t\taudioOn={audioOn}\n\t\t\t\tsetAudio={setAudio}\n\t\t\t\tgoldKey={hasGoldKey}\n\t\t\t\tsilverKey={hasSilverKey}\n\t\t\t/>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t<StartGame\n\t\t\t\t\tsetHasSilverKey={setHasSilverKey}\n\t\t\t\t\tsetHasGoldKey={setHasGoldKey} />\n\t\t\t\t</Route>\n\t\t\t\t<Route exact path=\"/haunted-house-game\">\n\t\t\t\t\t<StartGame\n\t\t\t\t\tsetHasSilverKey={setHasSilverKey}\n\t\t\t\t\tsetHasGoldKey={setHasGoldKey} />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/startgame/:page\">\n\t\t\t\t\t<StartGame\n\t\t\t\t\tsetHasSilverKey={setHasSilverKey}\n\t\t\t\t\tsetHasGoldKey={setHasGoldKey} />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/hallway/:page\">\n\t\t\t\t\t<Hallway\n\t\t\t\t\t\taudioOn={audioOn}\n\t\t\t\t\t\trooms={rooms}\n\t\t\t\t\t\thasSilverKey={hasSilverKey}\n\t\t\t\t\t\thasGoldKey={hasGoldKey}\n\t\t\t\t\t\tsetHasSilverKey={setHasSilverKey}\n\t\t\t\t\t\tsetHasGoldKey={setHasGoldKey}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/hallwayreroute\">\n\t\t\t\t\t<HallwayReroute\n\t\t\t\t\t\taudioOn={audioOn}\n\t\t\t\t\t\trooms={rooms}\n\t\t\t\t\t\thasSilverKey={hasSilverKey}\n\t\t\t\t\t\thasGoldKey={hasGoldKey}\n\t\t\t\t\t\tsetHasSilverKey={setHasSilverKey}\n\t\t\t\t\t\tsetHasGoldKey={setHasGoldKey}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/room/:name\">\n\t\t\t\t\t<Room\n\t\t\t\t\t\trooms={rooms}\n\t\t\t\t\t\thasSilverKey={hasSilverKey}\n\t\t\t\t\t\thasGoldKey={hasGoldKey}\n\t\t\t\t\t\tsetHasSilverKey={setHasSilverKey}\n\t\t\t\t\t\tsetHasGoldKey={setHasGoldKey}\n\t\t\t\t\t\taudioOn={audioOn}\n\t\t\t\t\t\tevents={events}\n\t\t\t\t\t\trandomEvent={randomEvents[randomEventsIndex]}\n\t\t\t\t\t\tonEventPass={onEventPass}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/falseending\">\n\t\t\t\t\t<FalseEnding\n            setHasGoldKey={setHasGoldKey}\n          />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/gamewon\">\n\t\t\t\t\t<GameWon />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</HashRouter>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}